# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: ['master']

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout git
      uses: actions/checkout@v3
      
    - name: Check version
      uses: avides/actions-project-version-check@v1.4.0
      id: actions_project_version_check
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        file-to-check: pom.xml
        
    - name: Print version check result
      run: echo "Version check successful. New Version is:";
        echo ${{ steps.actions_project_version_check.outputs.version }}
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.actions_project_version_check.outputs.version }}
        release_name: leagueapi-gamedataservice-release
        draft: false
        prerelease: false
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml -B package --file pom.xml
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
